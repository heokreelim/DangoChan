/* 카드들을 4 x 3 격자로 배치 */
#frame {
    display: grid;
    justify-content: center;
    grid-template-columns: repeat(4, 100px);
    grid-gap: 20px;
    margin: 10px;
}

.container {
    width: 120px;
    height: 150px;
    perspective: 1000px;
}
  
.card {
    width: 100%;
    height: 100%;
    transition: transform 0.5s;
    transform-style: preserve-3d;
    position: relative;
}
  
.card-front,
.card-back {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
}
  
.card-front {
    background-image: url('/images/hearthstonegold.png');
    background-size: cover;       /* 전체 영역을 채우도록 */
    background-position: center;  /* 중앙 정렬 */
}
  
.card-back {
    color: black;
    background-color: bisque;
    background-size: cover;
    background-position: center;
    transform: rotateY(180deg);
}

  
/* revealed 상태에서 카드 전체가 180도 회전 */
/* 기본적으로 container에 revealed 클래스가 있으면 카드가 180도 회전 */
.container.revealed .card {
    transform: rotateY(180deg);
  }
  
  /* 매칭된 카드에도 revealed 상태와 동일한 효과를 주거나, 별도로 지정할 수 있음 */
  .container.matched .card {
    transform: rotateY(180deg);
  }
  
  

/* 2) 매칭된 카드 → 글씨체 bold + 더 이상 클릭 불가 */
.container.matched .card-back {
    font-weight: bold;
}
.container.matched {
    pointer-events: none; /* 매칭된 카드는 클릭 불가 */
}

/* 3) 매칭 실패 시 흔들리는 애니메이션 (shake) */
@keyframes shake {
    0%, 100% { transform: translate(0, 0); }
    20%, 60% { transform: translate(-8px, 0); }
    40%, 80% { transform: translate(8px, 0); }
}
.container.shake {
    animation: shake 0.5s;
}